
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Admin/_LayoutAdmin.cshtml";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Employee</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Employee</li>
                </ol>
            </div>
        </div>
    </div>
</div>


<div class="row" id="EmployeeFormList">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-10">
                        <h3 class="card-title">Employee list table</h3>
                    </div>
                    <div class="col-md-2">
                        <button class="btn btn-primary" onclick="AddEmployeeForm()">Add Employee</button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                
                <table id="dt-employee-list" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Action</th>
                        </tr>
                    </thead>

                </table>
            </div>
        </div>
    </div>
</div>



<div class="col-md-12" id="AddEmployeeForm" style="display:none;">
    <!-- general form elements -->
    <div class="card card-primary">
        <div class="card-header">
            <h3 class="card-title">Employee Form</h3>
        </div>
        <!-- /.card-header -->
        <!-- form start -->
        <div>
            <div class="card-body">
                <input type="hidden" id="EmployeeId" />
                <div class="form-group">
                    <label for="employeeName">Employee Name</label>
                    <input type="text" class="form-control" id="employeeName" placeholder="Enter name">
                    <span class="text-danger" id="val_EmployeeName" style="display:none;"> Name is required</span>
                </div>

                <div class="form-group">
                    <label for="employeeEmail">Email</label>
                    <input type="email" class="form-control" id="employeeEmail" placeholder="Enter a email">
                    <span class="text-danger" id="val_EmployeeEmail" style="display:none;">Email is required</span>
                </div>


                <div class="form-group">
                    <label for="employeePhone">Phone</label>
                    <input type="text" class="form-control" id="employeePhone" placeholder="Enter a phone number">
                    <span class="text-danger" id="val_EmployeePhone" style="display:none;">Phone is required</span>
                </div>

            </div>
            <!-- /.card-body -->

            <div class="card-footer">
                <div class="row">
                    <button type="submit" onclick="SaveEmployee()" class="btn btn-primary col-md-5" style="margin: 0 auto;">
                        Submit
                    </button>
                    <button type="submit" onclick="CancelEmployee()" class="btn btn-danger col-md-5" style="margin: 0 auto;">
                        Cancel
                    </button>

                </div>
            </div>
        </div>
    </div>
    <!-- /.card -->


</div>

<script src="~/plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap 4 -->
<script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- DataTables  & Plugins -->
<script src="~/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="~/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="~/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
<script src="~/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="~/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
<script src="~/plugins/jszip/jszip.min.js"></script>
<script src="~/plugins/pdfmake/pdfmake.min.js"></script>
<script src="~/plugins/pdfmake/vfs_fonts.js"></script>
<script src="~/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="~/plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="~/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<script>

    $("#container-loader").hide();
    var tblEmployee =
        $('#dt-employee-list').DataTable({
                    "processing": true, // for show progress bar
                    "serverSide": true, // for process server side
                    "filter": true, // this is for disable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    "ajax": {
                        "url": "@Url.Action("LoadEmployeeData", "Employee")",
                        "type": "POST",
                        "datatype": "json"

                    },

                    "columns": [
                        { "data": "id", "name": "id", "autoWidth": true },
                        { "data": "name", "name": "name", "autoWidth": true },
                        { "data": "email", "name": "email", "autoWidth": true },
                        { "data": "phone", "name": "phone", "autoWidth": true },
                        {
                            data: null,
                            render: function (data, type, row) {
                                return `<button onClick='EditEmployee(${data.id},"${data.name}","${data.email}","${data.phone}")' class='btn btn-primary'>Edit</button>
                                        <button onClick='DeleteEmployee(${data.id})' class='btn btn-danger'>Delete</button>`;
                            }
                        },
                    ]

                });

    const AddEmployeeForm = () => {
             $('#EmployeeId').val('');
           $('#employeeName').val('');
            $("#employeeEmail").val('');
            $("#employeePhone").val('');
            $("#AddEmployeeForm").show();
            $("#EmployeeFormList").hide();





        }

     function SaveEmployee(){

        let EmployeeId = $("#EmployeeId").val();
        let EmployeeName = $("#employeeName").val();
        let EmployeeEmail = $("#employeeEmail").val();
        let EmployeePhone = $("#employeePhone").val();


        if (EmployeeName !== "") {
            $('#val_EmployeeName').hide();
        } else {
            $('#val_EmployeeName').show();
            return;
        }

         if (EmployeeEmail !== "") {
             $('#val_EmployeeEmail').hide();
         } else {
             $('#val_EmployeeEmail').show();
             return;
         }


         if (EmployeePhone !== "") {
             $('#val_EmployeePhone').hide();
         } else {
             $('#val_EmployeePhone').show();
             return;
         }


         if (EmployeeId != '') {
             var row = {
                 Name: EmployeeName,
                 Email: EmployeeEmail,
                 Phone: EmployeePhone
             }

              $.ajax({
                            type: "POST",
                            url: "@Url.Action("EditEmployee", "Employee")",
                            data: { EmployeeId: EmployeeId , param: row },
                            success: function (response) {

                                if (response == "Done") {
                                    $("#AddEmployeeForm").hide();
                                    $("#EmployeeFormList").show();
                                    tblEmployee.clear().draw();

                                    $("#employeeName").val('');

                                    return;
                                }


                            },
                            failure: function (response) {
                                console.error(response.responseText);
                            },
                            error: function (response) {
                                console.error(response.responseText);
                            }
                        })
         }

         if (EmployeeId == '') {
             var row = {
                 Name: EmployeeName,
                 Email: EmployeeEmail,
                 Phone: EmployeePhone
             }


          $.ajax({
                            type: "POST",
                            url: "@Url.Action("CreateEmployee", "Employee")",
                            data: { param: row },
                            success: function (response) {

                                if (response == "Done") {
                                    $("#AddEmployeeForm").hide();
                                    $("#EmployeeFormList").show();
                                    tblEmployee.clear().draw();

                                    $("#employeeName").val('');
                                }


                            },
                            failure: function (response) {
                                console.error(response.responseText);
                            },
                            error: function (response) {
                                console.error(response.responseText);
                            }
                        })
         }

        }


     const CancelEmployee = () => {
            $("#AddEmployeeForm").hide();
            $("#EmployeeFormList").show();
            LoadEmployeeData();
        }

     const LoadEmployeeData = () => {
            tblEmployee.clear().draw();
     }

    const DeleteEmployee = (id) => {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {

                  $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteEmployee", "Employee")",
                            data: { EmployeeId: id },
                            success: function (response) {

                                if (response == "Done") {


                                    Swal.fire(
                                        'Deleted!',
                                        'Your file has been deleted.',
                                        'success'
                                    )

                                    tblEmployee.clear().draw();
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'This record exsits in other record!',
                                    })
                                }


                            },
                            failure: function (response) {
                                console.error(response.responseText);
                            },
                            error: function (response) {
                                console.error(response.responseText);
                            }
                        })


            }
        })
    }

    const EditEmployee = (id, name,email,phone) => {
        console.log(id, name);
        let EmployeeId = $('#EmployeeId').val(id);
        let EmployeeName = $('#employeeName').val(name);
        let EmployeeEmail = $("#employeeEmail").val(email);
        let EmployeePhone = $("#employeePhone").val(phone);

        $("#AddEmployeeForm").show();
        $("#EmployeeFormList").hide();

    }

</script>